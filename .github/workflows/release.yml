on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0

      - name: Extract Go version from go.mod
        id: go-version
        run: |
          GO_VERSION=$(grep '^go ' go.mod | awk '{print $2}')
          echo "go_version=$GO_VERSION" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.go_version }}

      - name: Build
        run: |
          GOOS=windows GOARCH=amd64 go build -o FyUTILS.exe

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-artifact@v3
        with:
          name: FyUTILS.exe
          path: FyUTILS.exe

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: FyUTILS.exe
        continue-on-error: false

      - name: Generate Release Notes
        id: release_notes
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^)
          CURRENT_TAG=${{ github.ref_name }}
    
          REPO_URL="https://github.com/${{ github.repository }}"
          FIXED_ISSUES=$(git log $PREVIOUS_TAG..HEAD --grep="#[0-9]\+" --pretty=format:"- [%h]($REPO_URL/commit/%H) fixes %s")
          CHANGELOG=$(git log $PREVIOUS_TAG..HEAD --pretty=format:"- %s by %an ([%h]($REPO_URL/commit/%H))")
          
          RELEASE_BODY="#Release notes for FyUTILS ${{ github.ref_name }}:\n\n### Changelog:\n$CHANGELOG\n\nThank you for using FyUTILS!"
          
          echo "release_body=$RELEASE_BODY" >> $GITHUB_ENV
        shell: bash
          

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: FyUTILS ${{ github.ref_name }}
          body: ${{ env.release_body }}
          draft: false
          prerelease: false

      - name: Upload to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: FyUTILS.exe
          asset_name: FyUTILS.exe
          asset_content_type: application/vnd.microsoft.portable-executable